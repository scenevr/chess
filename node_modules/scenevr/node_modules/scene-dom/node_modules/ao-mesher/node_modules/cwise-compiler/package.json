{
  "name": "cwise-compiler",
  "version": "0.1.0",
  "description": "cwise's internal compiler",
  "main": "compiler.js",
  "scripts": {
    "test": "tap test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mikolalysenko/cwise-compiler.git"
  },
  "keywords": [
    "cwise",
    "ndarray",
    "compiler"
  ],
  "author": {
    "name": "Mikola Lysenko"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "gitHead": "29e146315bd0a8c50bd44b9b6b5bf4b769bd7aec",
  "bugs": {
    "url": "https://github.com/mikolalysenko/cwise-compiler/issues"
  },
  "dependencies": {
    "uniq": "~0.0.2"
  },
  "readme": "cwise-compiler\n==============\nJust the compiler from cwise.  You can call this directly if you know what you are doing and want to skip calling cwise-parser and including esprima.  This is only recommended in extreme cases though.  Otherwise you should stick to the default interface in cwise and not mess around with this craziness.\n\n## Install\n\n    npm install cwise-compiler\n\n## `require(\"cwise-compiler\")(procedure)`\nCompiles a cwise procedure for the given procedure.  The object procedure must have the following fields:\n\n* `args` An array of argument types (as in cwise)\n* `pre` A parsed pre function\n* `body` A parsed body function\n* `post` A parsed post function\n* `funcName` Name of the function\n* `blockSize` Block size to generate\n* `debug` Debug mode flag\n\n## Credits\n(c) 2013 Mikola Lysenko. MIT License\n",
  "homepage": "https://github.com/mikolalysenko/cwise-compiler#readme",
  "_id": "cwise-compiler@0.1.0",
  "_shasum": "899e5c1981b56041ab2921864b034fe0d591b71a",
  "_resolved": "https://registry.npmjs.org/cwise-compiler/-/cwise-compiler-0.1.0.tgz",
  "_from": "cwise-compiler@>=0.1.0 <0.2.0"
}
